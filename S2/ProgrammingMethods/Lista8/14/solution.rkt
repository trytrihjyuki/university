#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 7 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1           0 2452 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 17 3 84
(4
 #"; PRACA GRUPOWA PIOTR PIESIAK, MARCIN BAADOWSKI, FILIP KOMOROWSKI, M"
 #"AURYCY BORKOWSKI"
) 0 0 25 29 1 #"\n"
0 0 17 3 32 #"; Do list.rkt dodajemy procedury"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 52 #"; Miejsca, ktore sie zmienily oznaczone sa przez !!!"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; --------- ;"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; Wyrazenia ;"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; --------- ;"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"provide"
0 0 25 3 1 #" "
0 0 14 3 11 #"parse-apply"
0 0 25 3 1 #" "
0 0 14 3 9 #"parse-app"
0 0 25 3 1 #" "
0 0 14 3 9 #"parse-lam"
0 0 25 3 1 #" "
0 0 14 3 10 #"parse-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"provide"
0 0 25 3 1 #" "
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 14 3 4 #"eval"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"const"
0 0 25 3 7 #"      ("
0 0 14 3 3 #"val"
0 0 25 3 7 #")      "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"binop"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 4 #")   "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 8 #"var-expr"
0 0 25 3 4 #"   ("
0 0 14 3 2 #"id"
0 0 25 3 8 #")       "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 8 #"let-expr"
0 0 25 3 4 #"   ("
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 2 #") "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 7 #"if-expr"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"eb"
0 0 25 3 1 #" "
0 0 14 3 2 #"et"
0 0 25 3 1 #" "
0 0 14 3 2 #"ef"
0 0 25 3 2 #") "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 9 #"cons-expr"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 5 #")    "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 8 #"car-expr"
0 0 25 3 4 #"   ("
0 0 14 3 1 #"e"
0 0 25 3 9 #")        "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 8 #"cdr-expr"
0 0 25 3 4 #"   ("
0 0 14 3 1 #"e"
0 0 25 3 9 #")        "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 9 #"null-expr"
0 0 25 3 13 #"  ()         "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 10 #"null?-expr"
0 0 25 3 2 #" ("
0 0 14 3 1 #"e"
0 0 25 3 9 #")        "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 3 #"app"
0 0 25 3 9 #"        ("
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 7 #")      "
0 0 24 3 13 #"#:transparent"
0 0 25 3 2 #") "
0 0 17 3 25 #"; <------------------ !!!"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 3 #"lam"
0 0 25 3 9 #"        ("
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 6 #")     "
0 0 24 3 13 #"#:transparent"
0 0 25 3 2 #") "
0 0 17 3 25 #"; <------------------ !!!"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"apply"
0 0 25 3 7 #"      ("
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 4 #")   "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"const"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"binop"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 3 #") ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 3 #") ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 8 #"var-expr"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 8 #"let-expr"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 7 #"if-expr"
0 0 25 3 1 #" "
0 0 14 3 2 #"eb"
0 0 25 3 1 #" "
0 0 14 3 2 #"et"
0 0 25 3 1 #" "
0 0 14 3 2 #"ef"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 2 #"eb"
0 0 25 3 3 #") ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 2 #"et"
0 0 25 3 3 #") ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ef"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 9 #"cons-expr"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 8 #"car-expr"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 8 #"cdr-expr"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 9 #"null-expr"
0 0 25 3 2 #") "
0 0 14 3 4 #"true"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 10 #"null?-expr"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"app"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 4 #"))] "
0 0 17 3 28 #"; <--------------------- !!!"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"lam"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 3 #") ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 4 #"))] "
0 0 17 3 24 #"; <----------------- !!!"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"expr?"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 14 3 10 #"cons-expr?"
0 0 25 3 2 #"  "
0 0 14 3 1 #"l"
0 0 25 3 4 #" ))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 5 #"const"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"true"
0 0 25 3 4 #")  ("
0 0 14 3 5 #"const"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"false"
0 0 25 3 3 #") ("
0 0 14 3 5 #"const"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"null"
0 0 25 3 4 #")  ("
0 0 14 3 9 #"null-expr"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 8 #"var-expr"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 5 #"null?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 10 #"null?-expr"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 4 #"cons"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 9 #"cons-expr"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 3 #"car"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 8 #"car-expr"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 3 #"cdr"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 8 #"cdr-expr"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 15 3 3 #"let"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 8 #"let-expr"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"4"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 2 #"if"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 7 #"if-expr"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 15 3 6 #"lambda"
0 0 25 3 3 #")) "
0 0 17 3 6 #"; <!!!"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 9 #"parse-lam"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 4 #"list"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 10 #"parse-list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 5 #"apply"
0 0 25 3 3 #")) "
0 0 17 3 6 #"; <!!!"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 11 #"parse-apply"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 1 #"("
0 0 14 3 5 #"third"
0 0 25 3 2 #"  "
0 0 14 3 1 #"q"
0 0 25 3 6 #")))))]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 5 #"pair?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 8 #"op->proc"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 5 #")))) "
0 0 17 3 14 #"; <------- !!!"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 9 #"parse-app"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 7 #"symbol?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 5 #"binop"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 6 #"second"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 5 #"third"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"parse-apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"apply-pom"
0 0 25 3 1 #" "
0 0 14 3 4 #"rest"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 4 #"rest"
0 0 25 3 3 #")) "
0 0 14 3 4 #"null"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"rest"
0 0 25 3 3 #") ("
0 0 14 3 9 #"apply-pom"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"rest"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 2 #" ("
0 0 14 3 9 #"apply-pom"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"parse-list"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"null-expr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"cons-expr"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"parse-list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"parse-app"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 2 #") "
0 0 17 3 48 #"; <----------------------------------------- !!!"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"parse-app-accum"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 1 #" "
0 0 14 3 3 #"acc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 4 #")) ("
0 0 14 3 3 #"app"
0 0 25 3 1 #" "
0 0 14 3 3 #"acc"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 15 #"parse-app-accum"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 3 #"app"
0 0 25 3 1 #" "
0 0 14 3 3 #"acc"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 7 #"))))]))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 15 #"parse-app-accum"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 3 #") ("
0 0 14 3 5 #"parse"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"q"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"parse-lam"
0 0 25 3 1 #" "
0 0 14 3 3 #"pat"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 2 #") "
0 0 17 3 44 #"; <------------------------------------- !!!"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 3 #"pat"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 3 #"lam"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"pat"
0 0 25 3 3 #") ("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 3 #"lam"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"pat"
0 0 25 3 3 #") ("
0 0 14 3 9 #"parse-lam"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"pat"
0 0 25 3 2 #") "
0 0 14 3 1 #"e"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 14 #"; ---------- ;"
0 0 25 29 1 #"\n"
0 0 17 3 14 #"; Srodowiska ;"
0 0 25 29 1 #"\n"
0 0 17 3 14 #"; ---------- ;"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 7 #"environ"
0 0 25 3 2 #" ("
0 0 14 3 2 #"xs"
0 0 25 3 2 #") "
0 0 24 3 13 #"#:transparent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"env-empty"
0 0 25 3 2 #" ("
0 0 14 3 7 #"environ"
0 0 25 3 1 #" "
0 0 14 3 4 #"null"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"env-add"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"environ"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 3 #") ("
0 0 14 3 10 #"environ-xs"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"env-lookup"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"assoc-lookup"
0 0 25 3 1 #" "
0 0 14 3 2 #"xs"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 2 #"xs"
0 0 25 3 3 #") ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 20 #"\"Unknown identifier\""
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 2 #"xs"
0 0 25 3 5 #"))) ("
0 0 14 3 3 #"cdr"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 2 #"xs"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 12 #"assoc-lookup"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 2 #"xs"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 12 #"assoc-lookup"
0 0 25 3 2 #" ("
0 0 14 3 10 #"environ-xs"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; --------- ;"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; Ewaluacja ;"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; --------- ;"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"struct"
0 0 25 3 1 #" "
0 0 14 3 3 #"clo"
0 0 25 3 2 #" ("
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #") ) "
0 0 17 3 32 #"; <------------------------- !!!"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"value?"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 3 #") ("
0 0 14 3 6 #"value?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"value?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"clo?"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 4 #"))) "
0 0 17 3 53 #"; <---------------------------------------------- !!!"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"op->proc"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 2 #" ["
0 0 22 3 1 #"'"
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 3 3 #"] ["
0 0 22 3 1 #"'"
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 3 #"] ["
0 0 22 3 1 #"'"
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"*"
0 0 25 3 3 #"] ["
0 0 22 3 1 #"'"
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 1 #"/"
0 0 25 3 3 #"] ["
0 0 22 3 1 #"'"
0 0 14 3 1 #"%"
0 0 25 3 1 #" "
0 0 14 3 6 #"modulo"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ["
0 0 22 3 1 #"'"
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"="
0 0 25 3 3 #"] ["
0 0 22 3 1 #"'"
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #">"
0 0 25 3 3 #"] ["
0 0 22 3 1 #"'"
0 0 14 3 2 #">="
0 0 25 3 1 #" "
0 0 14 3 2 #">="
0 0 25 3 3 #"] ["
0 0 22 3 1 #"'"
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"<"
0 0 25 3 3 #"] ["
0 0 22 3 1 #"'"
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 2 #"<="
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ["
0 0 22 3 1 #"'"
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ["
0 0 22 3 1 #"'"
0 0 14 3 2 #"or"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 2 #"or"
0 0 25 3 2 #"  "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ["
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 3 4 #"])) "
0 0 17 3 46 #"; <--------------------------------------- !!!"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"const"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 14 3 1 #"n"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"binop"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 4 #") (("
0 0 14 3 8 #"op->proc"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 3 #") ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 8 #"let-expr"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 2 #" ("
0 0 14 3 7 #"env-add"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 8 #"var-expr"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 10 #"env-lookup"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 7 #"if-expr"
0 0 25 3 1 #" "
0 0 14 3 2 #"eb"
0 0 25 3 1 #" "
0 0 14 3 2 #"et"
0 0 25 3 1 #" "
0 0 14 3 2 #"ef"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 2 #"eb"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 2 #"et"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 2 #"ef"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 9 #"cons-expr"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 2 #"e1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 2 #"e2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 8 #"car-expr"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 8 #"cdr-expr"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 9 #"null-expr"
0 0 25 3 2 #") "
0 0 14 3 4 #"null"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 10 #"null?-expr"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"vf"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ["
0 0 14 3 2 #"ve"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"       "
0 0 22 3 1 #"1"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"lam"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"clo"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")] "
0 0 17 3 40 #"; <--------------------------------- !!!"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 3 #"app"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 2 #") "
0 0 17 3 55 #"; <------------------------------------------------ !!!"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 2 #"vf"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ["
0 0 14 3 2 #"ve"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 5 #"match"
0 0 25 3 1 #" "
0 0 14 3 2 #"vf"
0 0 25 3 3 #" [("
0 0 14 3 3 #"clo"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 7 #"fun-env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 2 #" ("
0 0 14 3 7 #"env-add"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 2 #"ve"
0 0 25 3 1 #" "
0 0 14 3 7 #"fun-env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ["
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"ERROR\""
0 0 25 3 6 #"]))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 8 #"eval-env"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 9 #"env-empty"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"program"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 15 3 3 #"let"
0 0 25 3 2 #" ["
0 0 14 3 5 #"twice"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"f"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 15 3 3 #"let"
0 0 25 3 2 #" ["
0 0 14 3 3 #"inc"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 5 #"twice"
0 0 25 3 1 #" "
0 0 14 3 5 #"twice"
0 0 25 3 1 #" "
0 0 14 3 5 #"twice"
0 0 25 3 1 #" "
0 0 14 3 5 #"twice"
0 0 25 3 1 #" "
0 0 14 3 3 #"inc"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"test-eval"
0 0 25 3 3 #") ("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 14 3 7 #"program"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"z"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 3 #" (("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 6 #")))))("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 29 1 #"\n"
0 0 22 3 1 #"9"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"z"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 3 #" (("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 6 #")))))("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 29 1 #"\n"
0 0 22 3 1 #"8"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 22 3 1 #"'"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"z"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 7 #"))))) ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 5 #")) (("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 29 1 #"\n"
0 0 22 3 2 #"12"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"z"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 5 #"))))("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 29 1 #"\n"
0 0 22 3 1 #"6"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #"))("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 29 1 #"\n"
0 0 22 3 1 #"3"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 22 3 1 #"'"
0 0 25 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 15 3 3 #"let"
0 0 25 3 2 #" ["
0 0 14 3 1 #"x"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"z"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 6 #")))) ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 5 #"))] ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 4 #"))) "
0 0 22 3 2 #"14"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 29 1 #"\n"
0 0 22 3 2 #"18"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 15 3 3 #"let"
0 0 25 3 2 #" ["
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 15 3 3 #"let"
0 0 25 3 2 #" ["
0 0 14 3 1 #"y"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #")] "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))] "
0 0 14 3 1 #"x"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"-3"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 29 1 #"\n"
0 0 22 3 1 #"9"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 3 #" (("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #")) "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 6 #")))) ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 29 1 #"\n"
0 0 22 3 2 #"28"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 3 #" (("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #")) "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 29 1 #"\n"
0 0 22 3 2 #"25"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 15 3 3 #"let"
0 0 25 3 2 #" ["
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #")] "
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 22 3 3 #"-11"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"eval"
0 0 25 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 1 #"z"
0 0 25 3 1 #" "
0 0 14 3 4 #"null"
0 0 25 3 6 #")))) ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 5 #")))))"
0           0
