#lang racket

(define (cube-root x)
  (define tolerance 0.0001)
  (define (good guess x)
    (if (< (abs (- (* guess guess guess) x)) tolerance) true false))
  (define (cube-root-iter guess x)
    (if (good guess x)
        guess
        (cube-root-iter (/ (+ (/ x (* guess guess)) (* 2 guess)) 3) x)))
  (cube-root-iter 1.0 x))


;testy
(define test1 (cube-root 1))
(define test2 (cube-root 2))
(define test3 (cube-root 420))
(define test4 (cube-root 13))
(define test5 (cube-root 27))